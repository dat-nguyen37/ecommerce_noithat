{"ast":null,"code":"export default {\n  name: \"SplineChart\",\n  props: ['data'],\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          id: 'line_chart'\n        },\n        xaxis: {\n          categories: categories\n        },\n        title: {\n          text: \"Doanh thu (triệu VND)\",\n          align: \"center\",\n          margin: 20,\n          style: {\n            fontSize: \"18px\",\n            fontWeight: \"bold\",\n            color: \"#333\"\n          }\n        }\n      },\n      series: [{\n        name: 'Doanh thu',\n        data: revenueByMonth\n      }]\n    };\n  },\n  watch: {\n    data: function (newData) {\n      this.updateChart(newData);\n    }\n  },\n  methods: {\n    updateChart(data) {\n      const categories = Array.from({\n        length: 12\n      }, (v, i) => `${i + 1}`);\n      const revenueByMonth = new Array(12).fill(0);\n      data.forEach(item => {\n        if (item._id && item.totalRevenue) {\n          revenueByMonth[item._id - 1] = item.totalRevenue / 1000000;\n        }\n      });\n      this.chartOptions.xaxis.categories = categories;\n      this.series[0].data = revenueByMonth;\n    }\n  },\n  mounted() {\n    this.updateChart(this.data);\n  }\n};","map":{"version":3,"names":["name","props","data","chartOptions","chart","id","xaxis","categories","title","text","align","margin","style","fontSize","fontWeight","color","series","revenueByMonth","watch","newData","updateChart","methods","Array","from","length","v","i","fill","forEach","item","_id","totalRevenue","mounted"],"sources":["src/components/splinechart/SplineChart.vue"],"sourcesContent":["<template>\r\n    <apexChart type=\"line\" height=\"300\"  :options=\"chartOptions\" :series=\"series\"></apexChart>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name:\"SplineChart\",\r\n  props:['data'],\r\n    data() {\r\n      \r\n      return {\r\n        chartOptions: {\r\n          chart: {\r\n            id: 'line_chart',\r\n          },\r\n          xaxis: {\r\n            categories: categories,\r\n          },\r\n          title: {\r\n          text: \"Doanh thu (triệu VND)\",\r\n          align: \"center\", \r\n          margin: 20, \r\n          style: {\r\n            fontSize: \"18px\", \r\n            fontWeight: \"bold\", \r\n            color: \"#333\", \r\n          },\r\n        },\r\n          \r\n        },\r\n        series: [{\r\n          name: 'Doanh thu',\r\n          data: revenueByMonth,\r\n          \r\n        }],\r\n        \r\n      }\r\n    },\r\n    watch: {\r\n        data: function(newData) {\r\n            this.updateChart(newData);\r\n        },\r\n    },\r\n    methods: {\r\n        updateChart(data) {\r\n            const categories = Array.from({ length: 12 }, (v, i) => `${i + 1}`);\r\n            const revenueByMonth = new Array(12).fill(0);\r\n            data.forEach(item => {\r\n                if (item._id && item.totalRevenue) {\r\n                    revenueByMonth[item._id - 1] = item.totalRevenue / 1000000;\r\n                }\r\n            });\r\n            this.chartOptions.xaxis.categories = categories;\r\n            this.series[0].data = revenueByMonth;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.updateChart(this.data);\r\n    },\r\n  }\r\n</script>"],"mappings":"AAKA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IAEA;MACAC,YAAA;QACAC,KAAA;UACAC,EAAA;QACA;QACAC,KAAA;UACAC,UAAA,EAAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,KAAA;YACAC,QAAA;YACAC,UAAA;YACAC,KAAA;UACA;QACA;MAEA;MACAC,MAAA;QACAhB,IAAA;QACAE,IAAA,EAAAe;MAEA;IAEA;EACA;EACAC,KAAA;IACAhB,IAAA,WAAAA,CAAAiB,OAAA;MACA,KAAAC,WAAA,CAAAD,OAAA;IACA;EACA;EACAE,OAAA;IACAD,YAAAlB,IAAA;MACA,MAAAK,UAAA,GAAAe,KAAA,CAAAC,IAAA;QAAAC,MAAA;MAAA,IAAAC,CAAA,EAAAC,CAAA,QAAAA,CAAA;MACA,MAAAT,cAAA,OAAAK,KAAA,KAAAK,IAAA;MACAzB,IAAA,CAAA0B,OAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAC,GAAA,IAAAD,IAAA,CAAAE,YAAA;UACAd,cAAA,CAAAY,IAAA,CAAAC,GAAA,QAAAD,IAAA,CAAAE,YAAA;QACA;MACA;MACA,KAAA5B,YAAA,CAAAG,KAAA,CAAAC,UAAA,GAAAA,UAAA;MACA,KAAAS,MAAA,IAAAd,IAAA,GAAAe,cAAA;IACA;EACA;EACAe,QAAA;IACA,KAAAZ,WAAA,MAAAlB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}