{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nexport default {\n  name: 'OrderView',\n  data() {\n    return {\n      data: [],\n      page: 1,\n      limit: 5\n    };\n  },\n  methods: {\n    formatDate(date) {\n      return moment(date).format('YYYY-MM-DD');\n    },\n    async prevPage() {\n      if (this.page > 1) {\n        this.page--;\n        await this.getOrder();\n      }\n    },\n    async nextPage() {\n      this.page++;\n      await this.getOrder();\n    },\n    async getOrder() {\n      try {\n        const res = await axios.get(`order/all?page=${this.page}&limit=${this.limit}`);\n        this.data = res.data;\n      } catch (err) {\n        alert(\"Loi!\");\n      }\n    },\n    async handlePayment(id, statusPayment) {\n      try {\n        let newStatusPayment;\n        if (statusPayment === \"Chưa thanh toán\") {\n          newStatusPayment = \"Đã thanh toán\";\n        } else {\n          newStatusPayment = \"Đã thanh toán\";\n        }\n        await axios.put(`/order/update/${id}`, {\n          paymentStatus: newStatusPayment\n        });\n        this.getOrder();\n        this.$attrs.getTotal;\n      } catch (err) {\n        alert(\"Loi!\");\n      }\n    },\n    async handleStatus(id, status) {\n      try {\n        let newStatus;\n        if (status === \"Chưa xác nhận\") {\n          newStatus = \"Đã xác nhận\";\n        } else {\n          newStatus = \"Đã xác nhận\";\n        }\n        await axios.put(`/order/update/${id}`, {\n          confimationStatus: newStatus\n        });\n        this.getOrder();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  mounted() {\n    this.getOrder();\n  }\n};","map":{"version":3,"names":["axios","moment","name","data","page","limit","methods","formatDate","date","format","prevPage","getOrder","nextPage","res","get","err","alert","handlePayment","id","statusPayment","newStatusPayment","put","paymentStatus","$attrs","getTotal","handleStatus","status","newStatus","confimationStatus","console","log","mounted"],"sources":["src/components/admin/Order/OrderView.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-[60vh] mt-2 relative\">\r\n        <div class=\"flex justify-between px-4\">\r\n            <h1 class=\"font-bold uppercase\">Order</h1>\r\n        </div>\r\n        <div class=\"bg-white shadow-lg mt-1\">\r\n            <table class=\"w-full\">\r\n                <thead class=\"border\">\r\n                    <tr class=\"bg-gray-400\">\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Đơn hàng</td>\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Ngày</td>\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Địa chỉ</td>\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Giá trị đơn hàng</td>\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Hình thức thanh toán</td>\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Trạng thái</td>\r\n                        <td scope=\"col\" class=\"px-1 py-3 border\">Action</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"item in data\" :key=\"item._id\">\r\n                        <td scope=\"col\" class=\"border text-center\">{{ item._id }}</td>\r\n                        <td scope=\"col\" class=\"border text-center\">{{ formatDate(item.createdAt) }}</td>\r\n                        <td scope=\"col\" class=\"border text-center\">{{ item.address }}</td>\r\n                        <td scope=\"col\" class=\"border text-center\">{{ item.price | numeral}}</td>\r\n                        <td scope=\"col\" class=\"border text-center\"><button class=\"p-1 bg-gray-400\" @click=\"handlePayment(item._id,item.paymentStatus)\">{{item.paymentStatus}}</button></td>\r\n                        <td scope=\"col\" class=\"border text-center\"><button class=\"p-1 bg-gray-400\" @click=\"handleStatus(item._id,item.confimationStatus)\">{{item.confimationStatus}}</button></td>\r\n                        <td scope=\"col\" class=\"text-red-500 border text-center text-xl\">\r\n                            <font-awesome-icon icon=\"trash\" class=\"mx-2 hover:cursor-pointer\" />\r\n                        </td>\r\n                    </tr>  \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"absolute bottom-0 right-0\">\r\n            <div class=\"flex gap-2\">\r\n                <font-awesome-icon icon=\"arrow-left\" v-if=\"page>1\" @click=\"prevPage\" class=\"p-2 bg-blue-400 hover:cursor-pointer\"/>\r\n                <font-awesome-icon icon=\"arrow-right\" @click=\"nextPage\" class=\"p-2 bg-blue-400 hover:cursor-pointer\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    name:'OrderView',\r\n    data(){\r\n        return{\r\n            data:[],\r\n            page:1,\r\n            limit:5\r\n        }\r\n    },\r\n    methods:{\r\n        formatDate(date) {\r\n            return moment(date).format('YYYY-MM-DD');\r\n        },\r\n        async prevPage(){\r\n            if (this.page > 1) {\r\n                this.page--;\r\n                await this.getOrder();\r\n            }\r\n        },\r\n        async nextPage() {\r\n            this.page++;\r\n            await this.getOrder();\r\n        },\r\n        async getOrder(){\r\n            try {\r\n                const res=await axios.get(`order/all?page=${this.page}&limit=${this.limit}`)\r\n                this.data=res.data\r\n            } catch (err) {\r\n                alert(\"Loi!\")\r\n            }\r\n        },\r\n        async handlePayment(id,statusPayment){\r\n        try {\r\n            let newStatusPayment;\r\n            if(statusPayment===\"Chưa thanh toán\"){\r\n                newStatusPayment=\"Đã thanh toán\"\r\n            }else{\r\n                newStatusPayment=\"Đã thanh toán\"\r\n            }\r\n            await axios.put(`/order/update/${id}`,{paymentStatus:newStatusPayment})\r\n            this.getOrder()\r\n            this.$attrs.getTotal\r\n        } catch (err) {\r\n            alert(\"Loi!\")\r\n        }\r\n    },\r\n    async handleStatus(id,status){\r\n        try {\r\n            let newStatus;\r\n            if(status===\"Chưa xác nhận\"){\r\n                newStatus=\"Đã xác nhận\"\r\n            }else{\r\n                newStatus=\"Đã xác nhận\"\r\n            }\r\n            await axios.put(`/order/update/${id}`,{confimationStatus:newStatus})\r\n            this.getOrder()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    },\r\n    },\r\n    mounted(){\r\n        this.getOrder()\r\n    }\r\n}\r\n</script>"],"mappings":"AA0CA,OAAAA,KAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAA,IAAA;MACAC,IAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA;MACA,OAAAP,MAAA,CAAAO,IAAA,EAAAC,MAAA;IACA;IACA,MAAAC,SAAA;MACA,SAAAN,IAAA;QACA,KAAAA,IAAA;QACA,WAAAO,QAAA;MACA;IACA;IACA,MAAAC,SAAA;MACA,KAAAR,IAAA;MACA,WAAAO,QAAA;IACA;IACA,MAAAA,SAAA;MACA;QACA,MAAAE,GAAA,SAAAb,KAAA,CAAAc,GAAA,wBAAAV,IAAA,eAAAC,KAAA;QACA,KAAAF,IAAA,GAAAU,GAAA,CAAAV,IAAA;MACA,SAAAY,GAAA;QACAC,KAAA;MACA;IACA;IACA,MAAAC,cAAAC,EAAA,EAAAC,aAAA;MACA;QACA,IAAAC,gBAAA;QACA,IAAAD,aAAA;UACAC,gBAAA;QACA;UACAA,gBAAA;QACA;QACA,MAAApB,KAAA,CAAAqB,GAAA,kBAAAH,EAAA;UAAAI,aAAA,EAAAF;QAAA;QACA,KAAAT,QAAA;QACA,KAAAY,MAAA,CAAAC,QAAA;MACA,SAAAT,GAAA;QACAC,KAAA;MACA;IACA;IACA,MAAAS,aAAAP,EAAA,EAAAQ,MAAA;MACA;QACA,IAAAC,SAAA;QACA,IAAAD,MAAA;UACAC,SAAA;QACA;UACAA,SAAA;QACA;QACA,MAAA3B,KAAA,CAAAqB,GAAA,kBAAAH,EAAA;UAAAU,iBAAA,EAAAD;QAAA;QACA,KAAAhB,QAAA;MACA,SAAAI,GAAA;QACAc,OAAA,CAAAC,GAAA,CAAAf,GAAA;MACA;IACA;EACA;EACAgB,QAAA;IACA,KAAApB,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}