{"ast":null,"code":"import axios from 'axios';\nimport PieChartVue from '../piechart/PieChart.vue';\nimport LineChart from '../splinechart/SplineChart.vue';\nexport default {\n  name: 'ChartView',\n  components: {\n    LineChart,\n    PieChartVue\n  },\n  data() {\n    return {\n      categories: [],\n      revenueByMonth: []\n    };\n  },\n  methods: {\n    async getTotalByMonth() {\n      try {\n        const res = await axios.get('order/totalByMonth');\n        const data = res.data;\n        this.categories = Array.from({\n          length: 12\n        }, (v, i) => `Tháng ${i + 1}`);\n        const revenueByMonth = new Array(12).fill(0);\n        data.forEach(item => {\n          if (item._id && item.totalRevenue) {\n            revenueByMonth[item._id - 1] = item.totalRevenue / 1000000;\n          }\n        });\n        this.revenueByMonth = revenueByMonth;\n      } catch (err) {\n        alert(\"Loi!\");\n      }\n    }\n  },\n  mounted() {\n    this.getTotalByMonth();\n  }\n};","map":{"version":3,"names":["axios","PieChartVue","LineChart","name","components","data","categories","revenueByMonth","methods","getTotalByMonth","res","get","Array","from","length","v","i","fill","forEach","item","_id","totalRevenue","err","alert","mounted"],"sources":["src/components/chart/ChartView.vue"],"sourcesContent":["<template>\r\n     <div class=\"grid grid-cols-5 gap-2\">\r\n        <div class=\" col-span-3 shadow-lg\">\r\n            <LineChart :categories=\"categories\" :revenueByMonth=\"revenueByMonth\" />\r\n        </div>\r\n        <div class=\" col-span-2 shadow-lg  \">\r\n           <div class=\"\"> <PieChartVue :categories=\"categories\" :revenueByMonth=\"revenueByMonth\" /></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport axios from 'axios'\r\nimport PieChartVue from '../piechart/PieChart.vue'\r\nimport LineChart from '../splinechart/SplineChart.vue'\r\nexport default {\r\n    name:'ChartView',\r\n    components:{LineChart,PieChartVue},\r\n    data(){\r\n        return{\r\n            categories:[],\r\n            revenueByMonth:[]\r\n        }\r\n    },\r\n    methods:{\r\n        async getTotalByMonth(){\r\n            try {\r\n                const res=await axios.get('order/totalByMonth')\r\n                const data = res.data;\r\n                this.categories = Array.from({ length: 12 }, (v, i) => `Tháng ${i + 1}`);\r\n                const revenueByMonth = new Array(12).fill(0);\r\n                data.forEach(item => {\r\n                    if (item._id && item.totalRevenue) {\r\n                        revenueByMonth[item._id - 1] = item.totalRevenue / 1000000;\r\n                    }\r\n                });\r\n                this.revenueByMonth = revenueByMonth;\r\n            } catch (err) {\r\n                alert(\"Loi!\")\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getTotalByMonth()  \r\n    }\r\n}\r\n</script>"],"mappings":"AAYA,OAAAA,KAAA;AACA,OAAAC,WAAA;AACA,OAAAC,SAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF,SAAA;IAAAD;EAAA;EACAI,KAAA;IACA;MACAC,UAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,gBAAA;MACA;QACA,MAAAC,GAAA,SAAAV,KAAA,CAAAW,GAAA;QACA,MAAAN,IAAA,GAAAK,GAAA,CAAAL,IAAA;QACA,KAAAC,UAAA,GAAAM,KAAA,CAAAC,IAAA;UAAAC,MAAA;QAAA,IAAAC,CAAA,EAAAC,CAAA,cAAAA,CAAA;QACA,MAAAT,cAAA,OAAAK,KAAA,KAAAK,IAAA;QACAZ,IAAA,CAAAa,OAAA,CAAAC,IAAA;UACA,IAAAA,IAAA,CAAAC,GAAA,IAAAD,IAAA,CAAAE,YAAA;YACAd,cAAA,CAAAY,IAAA,CAAAC,GAAA,QAAAD,IAAA,CAAAE,YAAA;UACA;QACA;QACA,KAAAd,cAAA,GAAAA,cAAA;MACA,SAAAe,GAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAf,eAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}